// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionStatus {
  PENDING
  REJECTED
  EXPIRED
  SUCCESSFUL
}

enum TransactionMode {
  CASH
  UPI
}

model User {
  id                   String        @id @default(cuid())
  name                 String
  email                String        @unique
  password             String
  token                String?
  sentTransactions     Transaction[] @relation("sender")
  receivedTransactions Transaction[] @relation("recipient")
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  Profile              Profile?
}

model Transaction {
  id             String            @id @default(cuid())
  senderId       String
  sender         User              @relation(name: "sender", map: "sender", fields: [senderId], references: [id])
  recipientId    String
  recipient      User              @relation(name: "recipient", map: "recipient", fields: [recipientId], references: [id])
  amount         Float
  mode           TransactionMode   @default(CASH)
  status         TransactionStatus @default(PENDING)
  expirationTime DateTime
  signature      String
  previousHash   String
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}

model Profile {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
